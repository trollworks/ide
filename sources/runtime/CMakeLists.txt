cmake_minimum_required(VERSION 3.22.0)
project(trollworks-runtime CXX)

file(GLOB_RECURSE RUNTIME_SOURCES
  ${PROJECT_SOURCE_DIR}/src/*.cpp
)

file(GLOB_RECURSE RUNTIME_HEADERS
  ${PROJECT_SOURCE_DIR}/include/*.hpp
)

add_library(${PROJECT_NAME} STATIC
  ${RUNTIME_HEADERS}
  ${RUNTIME_SOURCES}
)

target_include_directories(${PROJECT_NAME}
  PRIVATE "${PROJECT_SOURCE_DIR}/include"
  # Utils
  PRIVATE "$<TARGET_PROPERTY:fmt,INTERFACE_INCLUDE_DIRECTORIES>"
  PRIVATE "$<TARGET_PROPERTY:nlohmann-json,INTERFACE_INCLUDE_DIRECTORIES>"
  # Graphics
  PRIVATE "$<TARGET_PROPERTY:SDL2-static,INTERFACE_INCLUDE_DIRECTORIES>"
  PRIVATE "$<TARGET_PROPERTY:SDL2_image,INTERFACE_INCLUDE_DIRECTORIES>"
  PRIVATE "$<TARGET_PROPERTY:glad,INTERFACE_INCLUDE_DIRECTORIES>"
  PRIVATE "$<TARGET_PROPERTY:glm_static,INTERFACE_INCLUDE_DIRECTORIES>"
  # UI
  PRIVATE "$<TARGET_PROPERTY:imgui,INTERFACE_INCLUDE_DIRECTORIES>"
  # Scripts
  PRIVATE "$<TARGET_PROPERTY:lua_static,INTERFACE_INCLUDE_DIRECTORIES>"
  # ECS
  PRIVATE "$<TARGET_PROPERTY:entt,INTERFACE_INCLUDE_DIRECTORIES>"
)

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
  target_compile_definitions(${PROJECT_NAME} PUBLIC
    DEBUG
    _USE_MATH_DEFINES
  )

  target_compile_options(${PROJECT_NAME} PUBLIC
    -g -Wall -std=c++23
  )

  target_link_options(${PROJECT_NAME} PUBLIC -static-libstdc++)
else()
  target_compile_definitions(${PROJECT_NAME} PUBLIC
    _USE_MATH_DEFINES
  )

  target_compile_options(${PROJECT_NAME} PUBLIC
    -O2 -Wall -Werror -std=c++23
  )

  target_link_options(${PROJECT_NAME} PUBLIC -static-libstdc++)
endif()

install(
  TARGETS ${PROJECT_NAME}
  ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}" COMPONENT devel
  LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}" COMPONENT library
  RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}" COMPONENT library
)
